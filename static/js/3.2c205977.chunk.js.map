{"version":3,"sources":["../node_modules/manta.js/dist/browser/wallet/crate/pkg/manta_wasm_wallet_bg.js","../node_modules/manta.js/dist/browser/wallet/crate/pkg/manta_wasm_wallet.js"],"names":["heap","Array","fill","undefined","getObject","idx","push","heap_next","length","takeObject","ret","dropObject","WASM_VECTOR_LEN","cachedUint8Memory0","Uint8Array","getUint8Memory0","byteLength","wasm","buffer","cachedTextEncoder","TextEncoder","module","require","encodeString","encodeInto","arg","view","buf","encode","set","read","written","passStringToWasm0","malloc","realloc","ptr","subarray","len","mem","offset","code","charCodeAt","slice","cachedInt32Memory0","Int32Array","getInt32Memory0","cachedTextDecoder","TextDecoder","ignoreBOM","fatal","getStringFromWasm0","decode","addHeapObject","obj","isLikeNone","x","debugString","val","type","description","name","isArray","debug","i","builtInMatches","exec","toString","call","className","JSON","stringify","_","Error","message","stack","__wbg_adapter_28","arg0","arg1","arg2","cachedUint32Memory0","Uint32Array","getUint32Memory0","passArrayJsValueToWasm0","array","_assertClass","instance","klass","handleError","f","args","apply","this","e","Asset","static","Object","create","prototype","__destroy_into_raw","free","constructor","value","__wrap","ptr0","len0","AssetId","AssetMetadata","ControlFlow","LedgerError","Network","PolkadotJsLedger","api","ReceiverPost","SenderPost","Signer","server_url","SignerError","Transaction","TransactionKind","TransferPost","authorization_signature","asset_id","sources","sender_posts","receiver_posts","sinks","proof","ptr1","len1","ptr2","len2","ptr3","len3","ptr4","len4","Wallet","ledger","signer","balance","id","retptr","r0","r1","contains","asset","assets","checkpoint","restart","network","sync","sync_partial","check","transaction","sign","metadata","post","receiving_keys","address","WalletError","__wbindgen_object_drop_ref","__wbindgen_cb_drop","original","cnt","a","__wbindgen_json_serialize","__wbindgen_json_parse","parse","__wbg_push_1da70c715d0a0168","v0","result","getArrayJsValueFromWasm0","__wbg_pull_dbd9dd698c1a64a2","pull","__wbg_asset_new","__wbindgen_object_clone_ref","__wbindgen_string_new","__wbg_fetch_3894579f6e2af3be","fetch","__wbg_fetch_749a56934f95c96c","__wbindgen_string_get","__wbg_instanceof_Response_eaa426220848a39e","Response","__wbg_url_74285ddf2747cb3d","url","__wbg_status_c4ef3dd591e63435","status","__wbg_headers_fd64ad685cf22e5d","headers","__wbg_arrayBuffer_4c27b6f00c530232","arrayBuffer","arguments","__wbg_newwithstrandinit_05d7180788420c40","Request","__wbg_new_2d0053ee81e4dd2a","Headers","__wbg_append_de37df908812970d","arg3","arg4","append","__wbindgen_is_function","__wbg_newnoargs_b5b063fc6c2f0376","Function","__wbindgen_is_object","__wbg_next_579e583d33566a86","next","__wbg_next_aaef7c8aa5e212ac","__wbg_done_1b73b0672e15f234","done","__wbg_value_1ccc36bc03462d71","__wbg_iterator_6f9d4f28845f426c","Symbol","iterator","__wbg_get_765201544a2b6869","Reflect","get","__wbg_call_97ae9d8645dc388b","__wbg_new_0b9bfdd97583284e","__wbg_self_6d479506f72c6a71","self","__wbg_window_f2557cc78490aceb","window","__wbg_globalThis_7f206bda628d5286","globalThis","__wbg_global_ba75c50d1cf384f4","global","__wbindgen_is_undefined","__wbg_call_168da88779e35f61","__wbg_new_9962f939219f1820","state0","b","Promise","cb0","__wbg_adapter_107","__wbg_resolve_99fe17964f31ffc0","resolve","__wbg_then_11f7a54d67b4bfad","then","__wbg_then_cedad20fbbd9418a","__wbg_buffer_3f3d764d4747d564","__wbg_newwithbyteoffsetandlength_d9aa266703cb98be","__wbg_new_8c3f0052272a457a","__wbg_set_83db9690f9353e79","__wbg_length_9e1ae1900cb0fbd5","__wbg_has_8359f114ce042f5a","has","__wbg_set_bf3f89b92d5a34bf","__wbg_stringify_d6471d300ded9b68","__wbg_new_abda76e883ba8a5f","__wbg_stack_658279fe44541cf6","__wbg_error_f851667af71bcfc6","console","error","__wbindgen_debug_string","__wbindgen_throw","__wbindgen_memory","__wbindgen_closure_wrapper921","dtor","state","real","makeMutClosure"],"mappings":"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","file":"static/js/3.2c205977.chunk.js","sourcesContent":["import * as wasm from './manta_wasm_wallet_bg.wasm';\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachedUint8Memory0 = new Uint8Array();\n\nfunction getUint8Memory0() {\n    if (cachedUint8Memory0.byteLength === 0) {\n        cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8Memory0;\n}\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachedInt32Memory0 = new Int32Array();\n\nfunction getInt32Memory0() {\n    if (cachedInt32Memory0.byteLength === 0) {\n        cachedInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachedInt32Memory0;\n}\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n\nfunction debugString(val) {\n    // primitive types\n    const type = typeof val;\n    if (type == 'number' || type == 'boolean' || val == null) {\n        return  `${val}`;\n    }\n    if (type == 'string') {\n        return `\"${val}\"`;\n    }\n    if (type == 'symbol') {\n        const description = val.description;\n        if (description == null) {\n            return 'Symbol';\n        } else {\n            return `Symbol(${description})`;\n        }\n    }\n    if (type == 'function') {\n        const name = val.name;\n        if (typeof name == 'string' && name.length > 0) {\n            return `Function(${name})`;\n        } else {\n            return 'Function';\n        }\n    }\n    // objects\n    if (Array.isArray(val)) {\n        const length = val.length;\n        let debug = '[';\n        if (length > 0) {\n            debug += debugString(val[0]);\n        }\n        for(let i = 1; i < length; i++) {\n            debug += ', ' + debugString(val[i]);\n        }\n        debug += ']';\n        return debug;\n    }\n    // Test for built-in\n    const builtInMatches = /\\[object ([^\\]]+)\\]/.exec(toString.call(val));\n    let className;\n    if (builtInMatches.length > 1) {\n        className = builtInMatches[1];\n    } else {\n        // Failed to match the standard '[object ClassName]'\n        return toString.call(val);\n    }\n    if (className == 'Object') {\n        // we're a user defined class or Object\n        // JSON.stringify avoids problems with cycles, and is generally much\n        // easier than looping through ownProperties of `val`.\n        try {\n            return 'Object(' + JSON.stringify(val) + ')';\n        } catch (_) {\n            return 'Object';\n        }\n    }\n    // errors\n    if (val instanceof Error) {\n        return `${val.name}: ${val.message}\\n${val.stack}`;\n    }\n    // TODO we could test for more things here, like `Set`s and `Map`s.\n    return className;\n}\n\nfunction makeMutClosure(arg0, arg1, dtor, f) {\n    const state = { a: arg0, b: arg1, cnt: 1, dtor };\n    const real = (...args) => {\n        // First up with a closure we increment the internal reference\n        // count. This ensures that the Rust closure environment won't\n        // be deallocated while we're invoking it.\n        state.cnt++;\n        const a = state.a;\n        state.a = 0;\n        try {\n            return f(a, state.b, ...args);\n        } finally {\n            if (--state.cnt === 0) {\n                wasm.__wbindgen_export_2.get(state.dtor)(a, state.b);\n\n            } else {\n                state.a = a;\n            }\n        }\n    };\n    real.original = state;\n\n    return real;\n}\nfunction __wbg_adapter_28(arg0, arg1, arg2) {\n    wasm._dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h0c561fac08cefc7a(arg0, arg1, addHeapObject(arg2));\n}\n\nlet cachedUint32Memory0 = new Uint32Array();\n\nfunction getUint32Memory0() {\n    if (cachedUint32Memory0.byteLength === 0) {\n        cachedUint32Memory0 = new Uint32Array(wasm.memory.buffer);\n    }\n    return cachedUint32Memory0;\n}\n\nfunction getArrayJsValueFromWasm0(ptr, len) {\n    const mem = getUint32Memory0();\n    const slice = mem.subarray(ptr / 4, ptr / 4 + len);\n    const result = [];\n    for (let i = 0; i < slice.length; i++) {\n        result.push(takeObject(slice[i]));\n    }\n    return result;\n}\n\nfunction passArrayJsValueToWasm0(array, malloc) {\n    const ptr = malloc(array.length * 4);\n    const mem = getUint32Memory0();\n    for (let i = 0; i < array.length; i++) {\n        mem[ptr / 4 + i] = addHeapObject(array[i]);\n    }\n    WASM_VECTOR_LEN = array.length;\n    return ptr;\n}\n\nfunction _assertClass(instance, klass) {\n    if (!(instance instanceof klass)) {\n        throw new Error(`expected instance of ${klass.name}`);\n    }\n    return instance.ptr;\n}\n\nfunction handleError(f, args) {\n    try {\n        return f.apply(this, args);\n    } catch (e) {\n        wasm.__wbindgen_exn_store(addHeapObject(e));\n    }\n}\nfunction __wbg_adapter_107(arg0, arg1, arg2, arg3) {\n    wasm.wasm_bindgen__convert__closures__invoke2_mut__h6359c3f8f9f31ee3(arg0, arg1, addHeapObject(arg2), addHeapObject(arg3));\n}\n\n/**\n*/\nexport class Asset {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Asset.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_asset_free(ptr);\n    }\n    /**\n    * Parses `Self` from a JS value.\n    * @param {any} value\n    */\n    constructor(value) {\n        const ret = wasm.asset_new(addHeapObject(value));\n        return Asset.__wrap(ret);\n    }\n    /**\n    * Parses `Self` from a [`String`].\n    * @param {string} value\n    * @returns {Asset}\n    */\n    static from_string(value) {\n        const ptr0 = passStringToWasm0(value, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.asset_from_string(ptr0, len0);\n        return Asset.__wrap(ret);\n    }\n}\n/**\n*/\nexport class AssetId {\n\n    static __wrap(ptr) {\n        const obj = Object.create(AssetId.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_assetid_free(ptr);\n    }\n    /**\n    * Parses `Self` from a JS value.\n    * @param {any} value\n    */\n    constructor(value) {\n        const ret = wasm.assetid_new(addHeapObject(value));\n        return AssetId.__wrap(ret);\n    }\n    /**\n    * Parses `Self` from a [`String`].\n    * @param {string} value\n    * @returns {AssetId}\n    */\n    static from_string(value) {\n        const ptr0 = passStringToWasm0(value, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.assetid_from_string(ptr0, len0);\n        return AssetId.__wrap(ret);\n    }\n}\n/**\n*/\nexport class AssetMetadata {\n\n    static __wrap(ptr) {\n        const obj = Object.create(AssetMetadata.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_assetmetadata_free(ptr);\n    }\n    /**\n    * Parses `Self` from a JS value.\n    * @param {any} value\n    */\n    constructor(value) {\n        const ret = wasm.assetmetadata_new(addHeapObject(value));\n        return AssetMetadata.__wrap(ret);\n    }\n    /**\n    * Parses `Self` from a [`String`].\n    * @param {string} value\n    * @returns {AssetMetadata}\n    */\n    static from_string(value) {\n        const ptr0 = passStringToWasm0(value, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.assetmetadata_from_string(ptr0, len0);\n        return AssetMetadata.__wrap(ret);\n    }\n}\n/**\n*/\nexport class ControlFlow {\n\n    static __wrap(ptr) {\n        const obj = Object.create(ControlFlow.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_controlflow_free(ptr);\n    }\n    /**\n    * Parses `Self` from a JS value.\n    * @param {any} value\n    */\n    constructor(value) {\n        const ret = wasm.controlflow_new(addHeapObject(value));\n        return ControlFlow.__wrap(ret);\n    }\n    /**\n    * Parses `Self` from a [`String`].\n    * @param {string} value\n    * @returns {ControlFlow}\n    */\n    static from_string(value) {\n        const ptr0 = passStringToWasm0(value, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.controlflow_from_string(ptr0, len0);\n        return ControlFlow.__wrap(ret);\n    }\n}\n/**\n* Polkadot-JS API Ledger Connection Error\n*/\nexport class LedgerError {\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_ledgererror_free(ptr);\n    }\n}\n/**\n*/\nexport class Network {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Network.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_network_free(ptr);\n    }\n    /**\n    * Parses `Self` from a JS value.\n    * @param {any} value\n    */\n    constructor(value) {\n        const ret = wasm.network_new(addHeapObject(value));\n        return Network.__wrap(ret);\n    }\n    /**\n    * Parses `Self` from a [`String`].\n    * @param {string} value\n    * @returns {Network}\n    */\n    static from_string(value) {\n        const ptr0 = passStringToWasm0(value, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.network_from_string(ptr0, len0);\n        return Network.__wrap(ret);\n    }\n}\n/**\n* Polkadot-JS API Ledger Connection\n*/\nexport class PolkadotJsLedger {\n\n    static __wrap(ptr) {\n        const obj = Object.create(PolkadotJsLedger.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_polkadotjsledger_free(ptr);\n    }\n    /**\n    * Builds a new [`PolkadotJsLedger`] from its JS [`Api`].\n    * @param {any} api\n    */\n    constructor(api) {\n        const ret = wasm.polkadotjsledger_new(addHeapObject(api));\n        return PolkadotJsLedger.__wrap(ret);\n    }\n}\n/**\n*/\nexport class ReceiverPost {\n\n    static __wrap(ptr) {\n        const obj = Object.create(ReceiverPost.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_receiverpost_free(ptr);\n    }\n    /**\n    * Parses `Self` from a JS value.\n    * @param {any} value\n    */\n    constructor(value) {\n        const ret = wasm.receiverpost_new(addHeapObject(value));\n        return ReceiverPost.__wrap(ret);\n    }\n    /**\n    * Parses `Self` from a [`String`].\n    * @param {string} value\n    * @returns {ReceiverPost}\n    */\n    static from_string(value) {\n        const ptr0 = passStringToWasm0(value, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.receiverpost_from_string(ptr0, len0);\n        return ReceiverPost.__wrap(ret);\n    }\n}\n/**\n*/\nexport class SenderPost {\n\n    static __wrap(ptr) {\n        const obj = Object.create(SenderPost.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_senderpost_free(ptr);\n    }\n    /**\n    * Parses `Self` from a JS value.\n    * @param {any} value\n    */\n    constructor(value) {\n        const ret = wasm.senderpost_new(addHeapObject(value));\n        return SenderPost.__wrap(ret);\n    }\n    /**\n    * Parses `Self` from a [`String`].\n    * @param {string} value\n    * @returns {SenderPost}\n    */\n    static from_string(value) {\n        const ptr0 = passStringToWasm0(value, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.senderpost_from_string(ptr0, len0);\n        return SenderPost.__wrap(ret);\n    }\n}\n/**\n* Signer Client\n*/\nexport class Signer {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Signer.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_signer_free(ptr);\n    }\n    /**\n    * Builds a new signer connection with the given `server_url`.\n    * @param {string} server_url\n    */\n    constructor(server_url) {\n        const ptr0 = passStringToWasm0(server_url, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.signer_new(ptr0, len0);\n        return ret === 0 ? undefined : Signer.__wrap(ret);\n    }\n}\n/**\n* Signer Error\n*/\nexport class SignerError {\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_signererror_free(ptr);\n    }\n}\n/**\n*/\nexport class Transaction {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Transaction.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_transaction_free(ptr);\n    }\n    /**\n    * Parses `Self` from a JS value.\n    * @param {any} value\n    */\n    constructor(value) {\n        const ret = wasm.transaction_new(addHeapObject(value));\n        return Transaction.__wrap(ret);\n    }\n    /**\n    * Parses `Self` from a [`String`].\n    * @param {string} value\n    * @returns {Transaction}\n    */\n    static from_string(value) {\n        const ptr0 = passStringToWasm0(value, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.transaction_from_string(ptr0, len0);\n        return Transaction.__wrap(ret);\n    }\n}\n/**\n*/\nexport class TransactionKind {\n\n    static __wrap(ptr) {\n        const obj = Object.create(TransactionKind.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_transactionkind_free(ptr);\n    }\n    /**\n    * Parses `Self` from a JS value.\n    * @param {any} value\n    */\n    constructor(value) {\n        const ret = wasm.transactionkind_new(addHeapObject(value));\n        return TransactionKind.__wrap(ret);\n    }\n    /**\n    * Parses `Self` from a [`String`].\n    * @param {string} value\n    * @returns {TransactionKind}\n    */\n    static from_string(value) {\n        const ptr0 = passStringToWasm0(value, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.transactionkind_from_string(ptr0, len0);\n        return TransactionKind.__wrap(ret);\n    }\n}\n/**\n* Transfer Post\n*/\nexport class TransferPost {\n\n    static __wrap(ptr) {\n        const obj = Object.create(TransferPost.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_transferpost_free(ptr);\n    }\n    /**\n    * Builds a new [`TransferPost`].\n    * @param {string | undefined} authorization_signature\n    * @param {string | undefined} asset_id\n    * @param {any[]} sources\n    * @param {any[]} sender_posts\n    * @param {any[]} receiver_posts\n    * @param {any[]} sinks\n    * @param {any} proof\n    */\n    constructor(authorization_signature, asset_id, sources, sender_posts, receiver_posts, sinks, proof) {\n        var ptr0 = isLikeNone(asset_id) ? 0 : passStringToWasm0(asset_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        const ptr1 = passArrayJsValueToWasm0(sources, wasm.__wbindgen_malloc);\n        const len1 = WASM_VECTOR_LEN;\n        const ptr2 = passArrayJsValueToWasm0(sender_posts, wasm.__wbindgen_malloc);\n        const len2 = WASM_VECTOR_LEN;\n        const ptr3 = passArrayJsValueToWasm0(receiver_posts, wasm.__wbindgen_malloc);\n        const len3 = WASM_VECTOR_LEN;\n        const ptr4 = passArrayJsValueToWasm0(sinks, wasm.__wbindgen_malloc);\n        const len4 = WASM_VECTOR_LEN;\n        const ret = wasm.transferpost_new(isLikeNone(authorization_signature) ? 0 : addHeapObject(authorization_signature), ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3, ptr4, len4, addHeapObject(proof));\n        return TransferPost.__wrap(ret);\n    }\n}\n/**\n* Wallet with Polkadot-JS API Connection\n*/\nexport class Wallet {\n\n    static __wrap(ptr) {\n        const obj = Object.create(Wallet.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_wallet_free(ptr);\n    }\n    /**\n    * Starts a new [`Wallet`] from existing `signer` and `ledger` connections.\n    *\n    * # Setting Up the Wallet\n    *\n    * Creating a [`Wallet`] using this method should be followed with a call to [`sync`] or\n    * [`recover`] to retrieve the current checkpoint and balance for this [`Wallet`]. If the\n    * backing `signer` is known to be already initialized, a call to [`sync`] is enough,\n    * otherwise, a call to [`recover`] is necessary to retrieve the full balance state.\n    *\n    * [`sync`]: Self::sync\n    * [`recover`]: Self::recover\n    * @param {PolkadotJsLedger} ledger\n    * @param {Signer} signer\n    */\n    constructor(ledger, signer) {\n        _assertClass(ledger, PolkadotJsLedger);\n        var ptr0 = ledger.ptr;\n        ledger.ptr = 0;\n        _assertClass(signer, Signer);\n        var ptr1 = signer.ptr;\n        signer.ptr = 0;\n        const ret = wasm.wallet_new(ptr0, ptr1);\n        return Wallet.__wrap(ret);\n    }\n    /**\n    * Returns the current balance associated with this `id`.\n    * @param {string} id\n    * @returns {string}\n    */\n    balance(id) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            const ptr0 = passStringToWasm0(id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n            const len0 = WASM_VECTOR_LEN;\n            wasm.wallet_balance(retptr, this.ptr, ptr0, len0);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            return getStringFromWasm0(r0, r1);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n            wasm.__wbindgen_free(r0, r1);\n        }\n    }\n    /**\n    * Returns true if `self` contains at least `asset.value` of the asset of kind `asset.id`.\n    * @param {Asset} asset\n    * @returns {boolean}\n    */\n    contains(asset) {\n        _assertClass(asset, Asset);\n        var ptr0 = asset.ptr;\n        asset.ptr = 0;\n        const ret = wasm.wallet_contains(this.ptr, ptr0);\n        return ret !== 0;\n    }\n    /**\n    * Returns a shared reference to the balance state associated to `self`.\n    * @returns {any}\n    */\n    assets() {\n        const ret = wasm.wallet_assets(this.ptr);\n        return takeObject(ret);\n    }\n    /**\n    * Returns the [`Checkpoint`](ledger::Connection::Checkpoint) representing the current state\n    * of this wallet.\n    * @returns {any}\n    */\n    checkpoint() {\n        const ret = wasm.wallet_checkpoint(this.ptr);\n        return takeObject(ret);\n    }\n    /**\n    * Performs full wallet recovery.\n    *\n    * # Failure Conditions\n    *\n    * This method returns an element of type [`Error`] on failure, which can result from any\n    * number of synchronization issues between the wallet, the ledger, and the signer. See the\n    * [`InconsistencyError`] type for more information on the kinds of errors that can occur and\n    * how to resolve them.\n    *\n    * [`Error`]: wallet::Error\n    * [`InconsistencyError`]: wallet::InconsistencyError\n    * @param {Network} network\n    * @returns {Promise<any>}\n    */\n    restart(network) {\n        _assertClass(network, Network);\n        var ptr0 = network.ptr;\n        network.ptr = 0;\n        const ret = wasm.wallet_restart(this.ptr, ptr0);\n        return takeObject(ret);\n    }\n    /**\n    * Pulls data from the ledger, synchronizing the wallet and balance state. This method loops\n    * continuously calling [`sync_partial`](Self::sync_partial) until all the ledger data has\n    * arrived at and has been synchronized with the wallet.\n    *\n    * # Failure Conditions\n    *\n    * This method returns an element of type [`Error`] on failure, which can result from any\n    * number of synchronization issues between the wallet, the ledger, and the signer. See the\n    * [`InconsistencyError`] type for more information on the kinds of errors that can occur and\n    * how to resolve them.\n    *\n    * [`Error`]: wallet::Error\n    * [`InconsistencyError`]: wallet::InconsistencyError\n    * @param {Network} network\n    * @returns {Promise<any>}\n    */\n    sync(network) {\n        _assertClass(network, Network);\n        var ptr0 = network.ptr;\n        network.ptr = 0;\n        const ret = wasm.wallet_sync(this.ptr, ptr0);\n        return takeObject(ret);\n    }\n    /**\n    * Pulls data from the ledger, synchronizing the wallet and balance state. This method returns\n    * a [`ControlFlow`] for matching against to determine if the wallet requires more\n    * synchronization.\n    *\n    * # Failure Conditions\n    *\n    * This method returns an element of type [`Error`] on failure, which can result from any\n    * number of synchronization issues between the wallet, the ledger, and the signer. See the\n    * [`InconsistencyError`] type for more information on the kinds of errors that can occur and\n    * how to resolve them.\n    *\n    * [`Error`]: wallet::Error\n    * [`InconsistencyError`]: wallet::InconsistencyError\n    * @param {Network} network\n    * @returns {Promise<any>}\n    */\n    sync_partial(network) {\n        _assertClass(network, Network);\n        var ptr0 = network.ptr;\n        network.ptr = 0;\n        const ret = wasm.wallet_sync_partial(this.ptr, ptr0);\n        return takeObject(ret);\n    }\n    /**\n    * Checks if `transaction` can be executed on the balance state of `self`, returning the\n    * kind of update that should be performed on the balance state if the transaction is\n    * successfully posted to the ledger.\n    *\n    * # Safety\n    *\n    * This method is already called by [`post`](Self::post), but can be used by custom\n    * implementations to perform checks elsewhere.\n    * @param {Transaction} transaction\n    * @returns {TransactionKind}\n    */\n    check(transaction) {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            _assertClass(transaction, Transaction);\n            wasm.wallet_check(retptr, this.ptr, transaction.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var r2 = getInt32Memory0()[retptr / 4 + 2];\n            if (r2) {\n                throw takeObject(r1);\n            }\n            return TransactionKind.__wrap(r0);\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * Signs the `transaction` using the signer connection, sending `metadata` and `network` for context. This\n    * method _does not_ automatically sychronize with the ledger. To do this, call the\n    * [`sync`](Self::sync) method separately.\n    * @param {Transaction} transaction\n    * @param {AssetMetadata | undefined} metadata\n    * @param {Network} network\n    * @returns {Promise<any>}\n    */\n    sign(transaction, metadata, network) {\n        _assertClass(transaction, Transaction);\n        var ptr0 = transaction.ptr;\n        transaction.ptr = 0;\n        let ptr1 = 0;\n        if (!isLikeNone(metadata)) {\n            _assertClass(metadata, AssetMetadata);\n            ptr1 = metadata.ptr;\n            metadata.ptr = 0;\n        }\n        _assertClass(network, Network);\n        var ptr2 = network.ptr;\n        network.ptr = 0;\n        const ret = wasm.wallet_sign(this.ptr, ptr0, ptr1, ptr2);\n        return takeObject(ret);\n    }\n    /**\n    * Posts a transaction to the ledger, returning a success [`Response`] if the `transaction`\n    * was successfully posted to the ledger. This method automatically synchronizes with the\n    * ledger before posting, _but not after_. To amortize the cost of future calls to [`post`],\n    * the [`sync`] method can be used to synchronize with the ledger.\n    *\n    * # Failure Conditions\n    *\n    * This method returns a [`Response`] when there were no errors in producing transfer data and\n    * sending and receiving from the ledger, but instead the ledger just did not accept the\n    * transaction as is. This could be caused by an external update to the ledger while the signer\n    * was building the transaction that caused the wallet and the ledger to get out of sync. In\n    * this case, [`post`] can safely be called again, to retry the transaction.\n    *\n    * This method returns an error in any other case. The internal state of the wallet is kept\n    * consistent between calls and recoverable errors are returned for the caller to handle.\n    *\n    * [`Response`]: ledger::Write::Response\n    * [`post`]: Self::post\n    * [`sync`]: Self::sync\n    * @param {Transaction} transaction\n    * @param {AssetMetadata | undefined} metadata\n    * @param {Network} network\n    * @returns {Promise<any>}\n    */\n    post(transaction, metadata, network) {\n        _assertClass(transaction, Transaction);\n        var ptr0 = transaction.ptr;\n        transaction.ptr = 0;\n        let ptr1 = 0;\n        if (!isLikeNone(metadata)) {\n            _assertClass(metadata, AssetMetadata);\n            ptr1 = metadata.ptr;\n            metadata.ptr = 0;\n        }\n        _assertClass(network, Network);\n        var ptr2 = network.ptr;\n        network.ptr = 0;\n        const ret = wasm.wallet_post(this.ptr, ptr0, ptr1, ptr2);\n        return takeObject(ret);\n    }\n    /**\n    * Returns public receiving keys according to the `request`.\n    * @param {Network} network\n    * @returns {Promise<any>}\n    */\n    receiving_keys(network) {\n        _assertClass(network, Network);\n        var ptr0 = network.ptr;\n        network.ptr = 0;\n        const ret = wasm.wallet_receiving_keys(this.ptr, ptr0);\n        return takeObject(ret);\n    }\n    /**\n    * Returns public receiving keys according to the `request`.\n    * @param {Network} network\n    * @returns {Promise<any>}\n    */\n    address(network) {\n        _assertClass(network, Network);\n        var ptr0 = network.ptr;\n        network.ptr = 0;\n        const ret = wasm.wallet_address(this.ptr, ptr0);\n        return takeObject(ret);\n    }\n}\n/**\n* Wallet Error\n*/\nexport class WalletError {\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_walleterror_free(ptr);\n    }\n}\n\nexport function __wbindgen_object_drop_ref(arg0) {\n    takeObject(arg0);\n};\n\nexport function __wbindgen_cb_drop(arg0) {\n    const obj = takeObject(arg0).original;\n    if (obj.cnt-- == 1) {\n        obj.a = 0;\n        return true;\n    }\n    const ret = false;\n    return ret;\n};\n\nexport function __wbindgen_json_serialize(arg0, arg1) {\n    const obj = getObject(arg1);\n    const ret = JSON.stringify(obj === undefined ? null : obj);\n    const ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nexport function __wbindgen_json_parse(arg0, arg1) {\n    const ret = JSON.parse(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n};\n\nexport function __wbg_push_1da70c715d0a0168(arg0, arg1, arg2) {\n    var v0 = getArrayJsValueFromWasm0(arg1, arg2).slice();\n    wasm.__wbindgen_free(arg1, arg2 * 4);\n    const ret = getObject(arg0).push(v0);\n    return addHeapObject(ret);\n};\n\nexport function __wbg_pull_dbd9dd698c1a64a2(arg0, arg1) {\n    const ret = getObject(arg0).pull(takeObject(arg1));\n    return addHeapObject(ret);\n};\n\nexport function __wbg_asset_new(arg0) {\n    const ret = Asset.__wrap(arg0);\n    return addHeapObject(ret);\n};\n\nexport function __wbindgen_object_clone_ref(arg0) {\n    const ret = getObject(arg0);\n    return addHeapObject(ret);\n};\n\nexport function __wbindgen_string_new(arg0, arg1) {\n    const ret = getStringFromWasm0(arg0, arg1);\n    return addHeapObject(ret);\n};\n\nexport function __wbg_fetch_3894579f6e2af3be(arg0) {\n    const ret = fetch(getObject(arg0));\n    return addHeapObject(ret);\n};\n\nexport function __wbg_fetch_749a56934f95c96c(arg0, arg1) {\n    const ret = getObject(arg0).fetch(getObject(arg1));\n    return addHeapObject(ret);\n};\n\nexport function __wbindgen_string_get(arg0, arg1) {\n    const obj = getObject(arg1);\n    const ret = typeof(obj) === 'string' ? obj : undefined;\n    var ptr0 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nexport function __wbg_instanceof_Response_eaa426220848a39e(arg0) {\n    let result;\n    try {\n        result = getObject(arg0) instanceof Response;\n    } catch {\n        result = false;\n    }\n    const ret = result;\n    return ret;\n};\n\nexport function __wbg_url_74285ddf2747cb3d(arg0, arg1) {\n    const ret = getObject(arg1).url;\n    const ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nexport function __wbg_status_c4ef3dd591e63435(arg0) {\n    const ret = getObject(arg0).status;\n    return ret;\n};\n\nexport function __wbg_headers_fd64ad685cf22e5d(arg0) {\n    const ret = getObject(arg0).headers;\n    return addHeapObject(ret);\n};\n\nexport function __wbg_arrayBuffer_4c27b6f00c530232() { return handleError(function (arg0) {\n    const ret = getObject(arg0).arrayBuffer();\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_newwithstrandinit_05d7180788420c40() { return handleError(function (arg0, arg1, arg2) {\n    const ret = new Request(getStringFromWasm0(arg0, arg1), getObject(arg2));\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_new_2d0053ee81e4dd2a() { return handleError(function () {\n    const ret = new Headers();\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_append_de37df908812970d() { return handleError(function (arg0, arg1, arg2, arg3, arg4) {\n    getObject(arg0).append(getStringFromWasm0(arg1, arg2), getStringFromWasm0(arg3, arg4));\n}, arguments) };\n\nexport function __wbindgen_is_function(arg0) {\n    const ret = typeof(getObject(arg0)) === 'function';\n    return ret;\n};\n\nexport function __wbg_newnoargs_b5b063fc6c2f0376(arg0, arg1) {\n    const ret = new Function(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n};\n\nexport function __wbindgen_is_object(arg0) {\n    const val = getObject(arg0);\n    const ret = typeof(val) === 'object' && val !== null;\n    return ret;\n};\n\nexport function __wbg_next_579e583d33566a86(arg0) {\n    const ret = getObject(arg0).next;\n    return addHeapObject(ret);\n};\n\nexport function __wbg_next_aaef7c8aa5e212ac() { return handleError(function (arg0) {\n    const ret = getObject(arg0).next();\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_done_1b73b0672e15f234(arg0) {\n    const ret = getObject(arg0).done;\n    return ret;\n};\n\nexport function __wbg_value_1ccc36bc03462d71(arg0) {\n    const ret = getObject(arg0).value;\n    return addHeapObject(ret);\n};\n\nexport function __wbg_iterator_6f9d4f28845f426c() {\n    const ret = Symbol.iterator;\n    return addHeapObject(ret);\n};\n\nexport function __wbg_get_765201544a2b6869() { return handleError(function (arg0, arg1) {\n    const ret = Reflect.get(getObject(arg0), getObject(arg1));\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_call_97ae9d8645dc388b() { return handleError(function (arg0, arg1) {\n    const ret = getObject(arg0).call(getObject(arg1));\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_new_0b9bfdd97583284e() {\n    const ret = new Object();\n    return addHeapObject(ret);\n};\n\nexport function __wbg_self_6d479506f72c6a71() { return handleError(function () {\n    const ret = self.self;\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_window_f2557cc78490aceb() { return handleError(function () {\n    const ret = window.window;\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_globalThis_7f206bda628d5286() { return handleError(function () {\n    const ret = globalThis.globalThis;\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_global_ba75c50d1cf384f4() { return handleError(function () {\n    const ret = global.global;\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbindgen_is_undefined(arg0) {\n    const ret = getObject(arg0) === undefined;\n    return ret;\n};\n\nexport function __wbg_call_168da88779e35f61() { return handleError(function (arg0, arg1, arg2) {\n    const ret = getObject(arg0).call(getObject(arg1), getObject(arg2));\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_new_9962f939219f1820(arg0, arg1) {\n    try {\n        var state0 = {a: arg0, b: arg1};\n        var cb0 = (arg0, arg1) => {\n            const a = state0.a;\n            state0.a = 0;\n            try {\n                return __wbg_adapter_107(a, state0.b, arg0, arg1);\n            } finally {\n                state0.a = a;\n            }\n        };\n        const ret = new Promise(cb0);\n        return addHeapObject(ret);\n    } finally {\n        state0.a = state0.b = 0;\n    }\n};\n\nexport function __wbg_resolve_99fe17964f31ffc0(arg0) {\n    const ret = Promise.resolve(getObject(arg0));\n    return addHeapObject(ret);\n};\n\nexport function __wbg_then_11f7a54d67b4bfad(arg0, arg1) {\n    const ret = getObject(arg0).then(getObject(arg1));\n    return addHeapObject(ret);\n};\n\nexport function __wbg_then_cedad20fbbd9418a(arg0, arg1, arg2) {\n    const ret = getObject(arg0).then(getObject(arg1), getObject(arg2));\n    return addHeapObject(ret);\n};\n\nexport function __wbg_buffer_3f3d764d4747d564(arg0) {\n    const ret = getObject(arg0).buffer;\n    return addHeapObject(ret);\n};\n\nexport function __wbg_newwithbyteoffsetandlength_d9aa266703cb98be(arg0, arg1, arg2) {\n    const ret = new Uint8Array(getObject(arg0), arg1 >>> 0, arg2 >>> 0);\n    return addHeapObject(ret);\n};\n\nexport function __wbg_new_8c3f0052272a457a(arg0) {\n    const ret = new Uint8Array(getObject(arg0));\n    return addHeapObject(ret);\n};\n\nexport function __wbg_set_83db9690f9353e79(arg0, arg1, arg2) {\n    getObject(arg0).set(getObject(arg1), arg2 >>> 0);\n};\n\nexport function __wbg_length_9e1ae1900cb0fbd5(arg0) {\n    const ret = getObject(arg0).length;\n    return ret;\n};\n\nexport function __wbg_has_8359f114ce042f5a() { return handleError(function (arg0, arg1) {\n    const ret = Reflect.has(getObject(arg0), getObject(arg1));\n    return ret;\n}, arguments) };\n\nexport function __wbg_set_bf3f89b92d5a34bf() { return handleError(function (arg0, arg1, arg2) {\n    const ret = Reflect.set(getObject(arg0), getObject(arg1), getObject(arg2));\n    return ret;\n}, arguments) };\n\nexport function __wbg_stringify_d6471d300ded9b68() { return handleError(function (arg0) {\n    const ret = JSON.stringify(getObject(arg0));\n    return addHeapObject(ret);\n}, arguments) };\n\nexport function __wbg_new_abda76e883ba8a5f() {\n    const ret = new Error();\n    return addHeapObject(ret);\n};\n\nexport function __wbg_stack_658279fe44541cf6(arg0, arg1) {\n    const ret = getObject(arg1).stack;\n    const ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nexport function __wbg_error_f851667af71bcfc6(arg0, arg1) {\n    try {\n        console.error(getStringFromWasm0(arg0, arg1));\n    } finally {\n        wasm.__wbindgen_free(arg0, arg1);\n    }\n};\n\nexport function __wbindgen_debug_string(arg0, arg1) {\n    const ret = debugString(getObject(arg1));\n    const ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nexport function __wbindgen_throw(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\nexport function __wbindgen_memory() {\n    const ret = wasm.memory;\n    return addHeapObject(ret);\n};\n\nexport function __wbindgen_closure_wrapper921(arg0, arg1, arg2) {\n    const ret = makeMutClosure(arg0, arg1, 269, __wbg_adapter_28);\n    return addHeapObject(ret);\n};\n\n","import * as wasm from \"./manta_wasm_wallet_bg.wasm\";\nexport * from \"./manta_wasm_wallet_bg.js\";"],"sourceRoot":""}